


#*********************** logging  start ***********************
#使用配置文件行号打印了问号
#logging.config=classpath:classpath:conf/logback-spring.xml
logging.file.max-history=365
logging.file.max-size=50MB
#配置日志输出的文件名，也可以配置文件名的绝对路径。
logging.file=/data/log/${spring.application.name}/catalina.log
#配置日志的路径。如果没有配置logging.file,Spring Boot 将默认使用spring.log作为文件名，当同时存在 logging.path 和 logging.file 时 logging.path 无效
#logging.path=/data/log/${spring.application.name}/
#logging.level设置日志级别。我们可以使用TARCE , DEBUG , INFO , WARN , ERROR , FATAL , OFF 。可以使用root级别和package级别来控制日志的输入级别。创建一个具有以下依赖关系的应用程序。
logging.level.org.springframework.security= DEBUG
logging.level.org.springframework.web= ERROR
logging.level.com.lakala= DEBUG
#定义文件中日志的样式。
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %c -%L -%msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36}:%L -%msg%n
#定义console中logging的样式。
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %c:%L -%msg%n

#*********************** logging  end ***********************